rules_version = '2';
      
service cloud.firestore {
  match /databases/{database}/documents {

    // Usuários: Um usuário só pode acessar seu próprio documento. Admins podem acessar qualquer um.
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == userId || request.auth.token.role == 'admin';
      allow delete: if request.auth.token.role == 'admin';
      // Listagem de todos os usuários é apenas para admins (ex: no dashboard).
      allow list: if request.auth.token.role == 'admin';
    }

    // Configurações (Settings): Leitura para todos, escrita para admins.
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'admin';
    }

    // Bolões: Leitura pública, escrita para admins.
    match /boloes/{bolaoId} {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }

    // Categorias: Leitura pública, escrita para admins.
    match /categories/{categoryId} {
      allow read, list: if true;
      allow write: if request.auth.token.role == 'admin';
    }

    // Times: Leitura pública, escrita para admins.
    match /teams/{teamId} {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }

    // Campeonatos: Leitura pública, escrita para admins.
    match /championships/{championshipId} {
      allow read: if true;
      allow write: if request.auth.token.role == 'admin';
    }
    
    // Chutes: Leitura pública para prova social, escrita apenas por admins.
    match /chutes/{chuteId} {
      allow create: if request.auth != null;
      allow read, list: if true;
      allow update, delete: if request.auth.token.role == 'admin';
    }

    // Transações: Usuário só pode ver as próprias. Admins podem ver todas.
    match /transactions/{transactionId} {
      allow create: if request.auth.uid == request.resource.data.uid;
      // Um usuário pode ler sua própria transação, um admin pode ler qualquer uma (get ou list).
      allow read: if request.auth.uid == resource.data.uid || request.auth.token.role == 'admin';
      allow update, delete: if request.auth.token.role == 'admin';
    }
  }
}