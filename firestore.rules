
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // As configurações do aplicativo devem ser legíveis por todos para que a UI pública funcione.
    match /settings/main_settings {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Usuários podem ler seus próprios perfis e administradores podem ler qualquer perfil.
    // Apenas os próprios usuários ou administradores podem atualizar perfis.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
    }

    // Times, campeonatos e categorias são legíveis por todos.
    // Apenas administradores podem criar, atualizar ou deletar.
    match /teams/{teamId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /championships/{championshipId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /categories/{categoryId} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Bolões são publicamente visíveis.
    // Apenas administradores podem criar, atualizar ou deletar bolões.
    match /boloes/{bolaoId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Chutes só podem ser criados por usuários autenticados.
    // Usuários podem ler seus próprios chutes, e administradores podem ler todos.
    // Qualquer usuário autenticado pode listar a coleção para permitir agregações.
    match /chutes/{chuteId} {
        allow get: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
        allow list: if request.auth != null;
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Admins podem anular
        allow delete: if false; // Chutes não devem ser deletados.
    }
    
    // Transações só podem ser criadas pelo sistema (via Cloud Functions/API segura) ou pelo próprio usuário.
    // Usuários só podem ler suas próprias transações, e administradores podem ler todas.
    match /transactions/{transactionId} {
        allow read: if request.auth != null && (resource.data.uid == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
        allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow delete: if false;
    }
  }
}
